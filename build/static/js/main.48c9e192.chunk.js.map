{"version":3,"sources":["js/CountDown.jsx","js/PartyMap.jsx","js/PricesCard.jsx","js/FlashBack.jsx","App.js","serviceWorker.js","index.js"],"names":["CountDown","props","state","remainingTime","days","hours","minutes","seconds","calculateRemainingTime","bind","timeout","this","clearTimeout","partyDate","moment","currentDate","diffTime","Math","floor","asDays","setState","setTimeout","Grid","container","spacing","alignItems","item","xs","md","Card","className","CardContent","Typography","variant","gutterBottom","React","Component","style","width","height","PartyMap","google","zoom","initialCenter","lat","lng","title","name","position","GoogleApiWrapper","apiKey","language","useStyles","makeStyles","card","minWidth","bullet","display","margin","transform","fontSize","pos","marginBottom","SimpleCard","classes","component","class","CardActions","Button","size","href","target","FlaskBack","AppBar","Toolbar","Room","Info","Phone","App","FlashBack","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48c9e192.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/CountDown.css\";\r\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport * as moment from \"moment\";\r\n\r\nexport default class CountDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      remainingTime: {\r\n        days: 0,\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0\r\n      }\r\n    };\r\n    this.calculateRemainingTime = this.calculateRemainingTime.bind(this);\r\n    this.timeout = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.calculateRemainingTime();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  calculateRemainingTime() {\r\n    var remainingTime = {};\r\n    const partyDate = moment(\"2019-11-30T17:00:00-03:00\");\r\n    const currentDate = moment();\r\n    const diffTime = moment.duration(partyDate - currentDate, \"milliseconds\");\r\n\r\n    remainingTime.seconds = diffTime.seconds();\r\n    remainingTime.minutes = diffTime.minutes();\r\n    remainingTime.hours = diffTime.hours();\r\n    remainingTime.days = Math.floor(diffTime.asDays());\r\n\r\n    this.setState({ ...this.state, remainingTime });\r\n\r\n    this.timeout = setTimeout(() => this.calculateRemainingTime(), 1000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} md={3}>\r\n            <Card className=\"time-card\">\r\n              <CardContent className=\"time-card\">\r\n                <Typography variant=\"h4\" className=\"time-card-time\">\r\n                  {this.state.remainingTime.days}\r\n                </Typography>\r\n                <Typography>Dias</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card className=\"time-card\">\r\n              <CardContent className=\"time-card\">\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                  {this.state.remainingTime.hours}\r\n                </Typography>\r\n                <Typography>Horas</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card className=\"time-card\">\r\n              <CardContent className=\"time-card\">\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                  {this.state.remainingTime.minutes}\r\n                </Typography>\r\n                <Typography>Minutos</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card className=\"time-card\">\r\n              <CardContent className=\"time-card\">\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                  {this.state.remainingTime.seconds}\r\n                </Typography>\r\n                <Typography>Segundos</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport '../css/PartyMap.css';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nconst style = {\r\n    width: '50%',\r\n    height: '50%'\r\n  }\r\n\r\nexport class PartyMap extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs={2} md={3}></Grid>\r\n                    <Grid item xs={8} md={3}>\r\n                        <Map google={this.props.google}\r\n                            zoom={18}\r\n                            style={style}\r\n                            initialCenter={{ lat: -19.834889, lng: -44.014472}}\r\n                            >\r\n                            <Marker\r\n                                title={'The marker`s title will appear as a tooltip.'}\r\n                                name={'SOMA'}\r\n                                position={{lat: -19.834889, lng: -44.014472}} />\r\n                            </Map>\r\n                        </Grid>\r\n                <Grid item xs={2} md={3}></Grid>\r\n            </Grid>\r\n        );\r\n      }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDJe3WBxKcL4CVM5aZaEdkNOb3zdS2IHv4',\r\n    language: 'pt-br'\r\n})(PartyMap);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs={2} md={3}></Grid>\r\n            <Grid item xs={8} md={3}>\r\n            <Card className={classes.card}>\r\n            <CardContent>\r\n                <Typography className={classes.title} component=\"h2\" gutterBottom>\r\n                    <ConfirmationNumberIcon/> <p class=\"price\">  1° Lote: R$35,00</p>\r\n                </Typography>\r\n                <Typography className={classes.title} component=\"h2\" gutterBottom>\r\n                    <ConfirmationNumberIcon/> <p class=\"price\">  2° Lote: R$40,00</p>\r\n                </Typography>\r\n                <Typography className={classes.title} component=\"h2\" gutterBottom>\r\n                    <ConfirmationNumberIcon/> <p class=\"price\">  3° Lote: R$45,00</p>\r\n                </Typography>\r\n                <Typography className={classes.title} component=\"h2\" gutterBottom>\r\n                    <ConfirmationNumberIcon/> <p class=\"price\">  4° Lote: R$50,00</p>\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\"><a href=\"https://www.sympla.com.br/flashback-cefet__697366\" target=\"_blank\">Comprar</a></Button>\r\n            </CardActions>\r\n            </Card>\r\n            </Grid>\r\n        <Grid item xs={2} md={3}></Grid>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport '../css/FlashBack.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Phone, Info, Room } from '@material-ui/icons';\r\nimport CountDown from './CountDown';\r\nimport PartyMap from './PartyMap';\r\nimport PricesCard from './PricesCard';\r\n\r\nexport default class FlaskBack extends React.Component  {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography className=\"menu-item\" variant=\"h4\">\r\n              <Room/>\r\n            </Typography>\r\n            <Typography className=\"menu-item\" variant=\"h4\">\r\n              <Info/>\r\n            </Typography>\r\n            <Typography className=\"menu-item\" variant=\"h4\">\r\n              <Phone/>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <CountDown/>\r\n        <PricesCard/>\r\n        <PartyMap/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import FlashBack from './js/FlashBack'\r\n\r\nfunction App() {\r\n  return new FlashBack();\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}